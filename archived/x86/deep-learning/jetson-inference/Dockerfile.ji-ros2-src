# docker build --no-cache -f Dockerfile.ji-ros2-src . -t sky360/ji-ros2:1.0.0
# sudo docker run --gpus all -it --rm --network=host --shm-size=8g --ulimit memlock=-1 --ulimit stack=67108864 -e DISPLAY=$DISPLAY -v /tmp/.X11-unix/:/tmp/.X11-unix sky360/ji-ros2:1.0.0 bash bash

##############################################
# Copied from https://github.com/athackst/dockerfiles/tree/main/ros2 but using sky360 image as base
##############################################

# docker run -it a564508b5768 bash

FROM sky360/ji:1.0.0

ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_PYTHON_VERSION=3

# Install language
RUN apt-get update && apt-get install -y \
  locales \
  && locale-gen en_GB.UTF-8 \
  && update-locale LC_ALL=en_GB.UTF-8 LANG=en_GB.UTF-8 \
  && rm -rf /var/lib/apt/lists/*
ENV LANG en_GB.UTF-8

# Install timezone
RUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime \
  && export DEBIAN_FRONTEND=noninteractive \
  && apt-get update \
  && apt-get install -y tzdata \
  && dpkg-reconfigure --frontend noninteractive tzdata \
  && rm -rf /var/lib/apt/lists/*

# Enable universe repository
# RUN add-apt-repository universe

# Install ROS2
RUN apt-get update && apt-get install -y \
    curl \
    gnupg2 \
    lsb-release \
    sudo \
    wget \
    libbenchmark-dev \
    libeigen3-dev \
    libgtest-dev \
    libconsole-bridge-dev \
    libtinyxml-dev \
    uncrustify \
    libasio-dev \
    libpyside2-dev \
    libzstd-dev \
    software-properties-common \
  && add-apt-repository universe \
  && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
  && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null \
  && apt update && sudo apt install -y \
    python3-flake8-docstrings \
    python3-pip \
    python3-pytest-cov \
    # start copy from kl
		libbullet-dev \
		libpython3-dev \
		python3-colcon-common-extensions \
		python3-flake8 \
		python3-numpy \
    python3-pytest-timeout \
		python3-rosdep \
		python3-setuptools \
		python3-vcstool \
		python3-rosinstall-generator \
		libasio-dev \
		libtinyxml2-dev \
		libcunit1-dev \
    # end copy from kl
    python3-babeltrace \
    python3-lxml \
    pybind11-dev \
    pybind11-dev \
    tango-icon-theme \
    libxml2-utils \
    libshiboken2-dev \
    ros-dev-tools \
    python3-cairo \
    python3-lttng \
    python3-matplotlib \
    libopencv-dev \
    acl \
    python3-pygraphviz \
  && rm -rf /var/lib/apt/lists/*

# install some pip packages needed for testing
RUN python3 -m pip install -U \
		argcomplete \
		flake8-blind-except \
		flake8-builtins \
		flake8-class-newline \
		flake8-comprehensions \
		flake8-deprecated \
		flake8-docstrings \
		flake8-import-order \
		flake8-quotes \
		pytest-repeat \
		pytest-rerunfailures \
		pytest


RUN mkdir -p /opt/ros/humble/src \
  && cd /opt/ros/humble \
  && vcs import --input https://raw.githubusercontent.com/ros2/ros2/humble/ros2.repos src \
  && apt-get upgrade \
  && rosdep init \
  && rosdep update \
  && rosdep install --from-paths src --ignore-src -y --skip-keys "fastcdr rti-connext-dds-6.0.1 urdfdom_headers" \
  && cd /opt/ros/humble/ \
  && colcon build --symlink-install

ARG USERNAME=ros
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Create a non-root user
RUN groupadd --gid $USER_GID $USERNAME \
  && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
  # [Optional] Add sudo support for the non-root user
  && apt-get update \
  && apt-get install -y sudo \
  && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
  && chmod 0440 /etc/sudoers.d/$USERNAME \
  # Cleanup
  && rm -rf /var/lib/apt/lists/* \
  && echo "source /opt/ros/humble/install/local_setup.bash" >> /home/$USERNAME/.bashrc

ENV ROS_DISTRO=humble
ENV AMENT_PREFIX_PATH=/opt/ros/humble
ENV AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS=1
ENV COLCON_PREFIX_PATH=/opt/ros/humble
ENV LD_LIBRARY_PATH=/opt/ros/humble/lib
ENV PATH=/opt/ros/humble/bin:$PATH
ENV PYTHONPATH=/opt/ros/humble/lib/python3.10/site-packages
ENV ROS_VERSION=2
ENV DEBIAN_FRONTEND=