
FROM ubuntu:22.04 as opencv

ENV OPENCV_VERSION=4.7.0
ENV TZ=Europe/London

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo $TZ > /etc/timezone &&
    apt-get update && apt-get upgrade -y && apt-get install -y \
    build-essential \
    cmake \
    pkg-config \
    wget \
    git \
    unzip \
    nano \
    curl \
    libgtk-3-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    qtbase5-dev \
    python3-dev \
    python3-numpy \
    libvtk9-dev libvtk9-qt-dev \
    libdc1394-25 \
    libdc1394-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-opencv1.0-0 \
    libgstreamer1.0-dev \
    libatlas-base-dev \
    liblapacke-dev \
    usbutils \
    libusb-1.0-0-dev

WORKDIR /tmp
RUN wget -O opencv-$OPENCV_VERSION.zip https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip && unzip opencv-$OPENCV_VERSION.zip && rm -f opencv-$OPENCV_VERSION.zip && \
    wget -O opencv_contrib-$OPENCV_VERSION.zip https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip && unzip opencv_contrib-$OPENCV_VERSION.zip && rm -f opencv_contrib-$OPENCV_VERSION.zip
WORKDIR /tmp/opencv-$OPENCV_VERSION/build
RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D OPENCV_GENERATE_PKGCONFIG=YES \
      -D ENABLE_PRECOMPILED_HEADERS=OFF \
      -D WITH_LIBV4L=ON \
      -D WITH_QT=ON \
      -D WITH_OPENGL=ON \
      -D WITH_OPENCL=ON \
      -D WITH_JAVA=OFF \
      -D WITH_CUDA=OFF \
      -D BUILD_opencv_java=OFF \
      -D BUILD_opencv_python=OFF \
      -D BUILD_opencv_python2=OFF \
      -D BUILD_opencv_python3=ON \
      -D PYTHON3_EXECUTABLE=$(which python3) \
      -D PYTHON3_INCLUDE_DIR=$(python3 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") \
      -D PYTHON3_PACKAGES_PATH=$(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") \
      -D INSTALL_PYTHON_EXAMPLES=OFF \
      -D BUILD_NEW_PYTHON_SUPPORT=ON \
      -D ENABLE_CXX11=ON \
      -D WITH_TBB=ON \
      -D BUILD_TESTS=OFF \
      -D INSTALL_TESTS=OFF \
      -D BUILD_PERF_TESTS=OFF \
      -D BUILD_EXAMPLES=OFF \
      -D INSTALL_C_EXAMPLES=OFF \
      -D OPENCV_ENABLE_NONFREE=ON \
      -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-$OPENCV_VERSION/modules \
      -D OpenGL_GL_PREFERENCE=LEGACY \
      .. && \
    make -j $(nproc) && \
    make install && \
    sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf' && \
    ldconfig &&
    apt-get autoclean && apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV PYTHONPATH=$PYTHONPATH:/usr/lib/python3/dist-packages/cv2/python-3.10/

FROM opencv as base-opencv
ARG TARGETARCH


FROM base-opencv AS base-opencv-amd64
# Install QHY sdk
WORKDIR /opt
RUN wget https://www.qhyccd.com/file/repository/publish/SDK/230228/sdk_linux64_23.02.28.tgz
RUN tar -xf sdk_linux64_23.02.28.tgz
RUN rm sdk_linux64_23.02.28.tgz
WORKDIR /opt/sdk_linux64_23.02.28
RUN bash install.sh

FROM base-opencv AS base-opencv-arm64
WORKDIR /opt
RUN wget https://www.qhyccd.com/file/repository/publish/SDK/230228/sdk_Arm64_23.02.28.tgz
RUN tar -xf sdk_Arm64_23.02.28.tgz
RUN rm sdk_Arm64_23.02.28.tgz
WORKDIR /opt/sdk_Arm64_23.02.28
RUN bash install.sh


FROM base-opencv-${TARGETARCH} AS sky360lib-dev

WORKDIR /opt
RUN git clone --recursive https://github.com/Sky360-Repository/sky360lib.git
WORKDIR /opt/sky360lib/build
RUN cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
    cmake --build . -j$(nproc) && \
    make install
ENV PYTHONPATH=$PYTHONPATH:/opt/sky360lib/build/lib
