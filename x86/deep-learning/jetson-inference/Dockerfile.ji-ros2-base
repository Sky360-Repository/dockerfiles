# docker build --no-cache -f Dockerfile.ji-ros2-base . -t sky360/ji-ros2-base:1.0.0
# sudo docker run --gpus all -it --rm --network=host --shm-size=8g --ulimit memlock=-1 --ulimit stack=67108864 -e DISPLAY=$DISPLAY -v /tmp/.X11-unix/:/tmp/.X11-unix sky360/ji-ros2-base:1.0.0 bash bash

##############################################
# Copied from https://github.com/athackst/dockerfiles/tree/main/ros2 but using sky360 image as base
##############################################

# docker run -it a564508b5768 bash

FROM sky360/ji:1.0.0

ENV DEBIAN_FRONTEND=noninteractive

# Install language
RUN apt-get update && apt-get install -y \
  locales \
  && locale-gen en_GB.UTF-8 \
  && update-locale LC_ALL=en_GB.UTF-8 LANG=en_GB.UTF-8 \
  && rm -rf /var/lib/apt/lists/*
ENV LANG en_GB.UTF-8

# Install timezone
RUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime \
  && export DEBIAN_FRONTEND=noninteractive \
  && apt-get update \
  && apt-get install -y tzdata \
  && dpkg-reconfigure --frontend noninteractive tzdata \
  && rm -rf /var/lib/apt/lists/*

# Enable universe repository
# RUN add-apt-repository universe

# Install ROS2
RUN apt-get update && apt-get install -y \
    curl \
    gnupg2 \
    lsb-release \
    sudo \
#    bash-completion \
#    build-essential \
#    cmake \
#    gdb \
#    git \
#    pylint \
#    python3-argcomplete \
#    python3-colcon-common-extensions \
#    python3-pip \
#    python3-rosdep \
#    python3-vcstool \
#    nano \
#    wget \    
    software-properties-common \
  && add-apt-repository universe \
  && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
  && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null \
  && apt-get update && apt-get install -y \ 
    # Install ros
    ros-humble-ros-base \
#    ros-humble-desktop \    
#    ros-dev-tools \
    python3-argcomplete \
    # Install ros distro testing packages
#    ros-humble-ament-lint \
#    ros-humble-launch-testing \
#    ros-humble-launch-testing-ament-cmake \
#    ros-humble-launch-testing-ros \
#    python3-autopep8 \
#  && rm -rf /var/lib/apt/lists/* \
#  && rosdep init || echo "rosdep already initialized" \
    # Update pydocstyle
#  && pip install --upgrade pydocstyle
  && rm -rf /var/lib/apt/lists/*

#ARG USERNAME=ros
#ARG USER_UID=1000
#ARG USER_GID=$USER_UID

# Create a non-root user
#RUN groupadd --gid $USER_GID $USERNAME \
#  && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
#  # [Optional] Add sudo support for the non-root user
#  && apt-get update \
#  && apt-get install -y sudo \
#  && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
#  && chmod 0440 /etc/sudoers.d/$USERNAME \
#  # Cleanup
#  # && rm -rf /var/lib/apt/lists/* \
#  && echo "source /usr/share/bash-completion/completions/git" >> /home/$USERNAME/.bashrc \
#  && echo "if [ -f /opt/ros/${ROS_DISTRO}/setup.bash ]; then source /opt/ros/${ROS_DISTRO}/setup.bash; fi" >> /home/$USERNAME/.bashrc

ENV ROS_DISTRO=humble
ENV AMENT_PREFIX_PATH=/opt/ros/humble
ENV COLCON_PREFIX_PATH=/opt/ros/humble
ENV LD_LIBRARY_PATH=/opt/ros/humble/lib
ENV PATH=/opt/ros/humble/bin:$PATH
ENV PYTHONPATH=/opt/ros/humble/lib/python3.10/site-packages
ENV ROS_PYTHON_VERSION=3
ENV ROS_VERSION=2
ENV DEBIAN_FRONTEND=
#ENV AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS=1