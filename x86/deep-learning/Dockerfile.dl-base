# docker build --no-cache -f Dockerfile.dl-base . -t sky360/dl-base:1.0.0

FROM nvcr.io/nvidia/pytorch:22.04-py3

WORKDIR /tmp

ENV TZ=Europe/London
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    pkg-config \
    wget \
    git \
    unzip \
    nano \
    curl \
    libgtk-3-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    gfortran \
    openexr \
    libatlas-base-dev \
    python3-dev \
    python3-numpy \
    libtbb2 \
    libtbb-dev \
    #libdc1394-22-dev \
    libdc1394-dev \
    libopenexr-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer1.0-dev \
    #qt5-default
    qtbase5-dev \
    qtchooser \
    qt5-qmake \
    qtbase5-dev-tools    

# Install boost
RUN apt-get install -y libboost-all-dev

# Install pip
RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
RUN python3 get-pip.py

RUN ln -s /usr/bin/python3 /usr/bin/python

# Build and Install OpenCV
WORKDIR /tmp

ENV OPENCV_VERSION=4.6.0

RUN wget -O opencv-$OPENCV_VERSION.zip https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip
RUN wget -O opencv_contrib-$OPENCV_VERSION.zip https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip

RUN unzip opencv-$OPENCV_VERSION.zip
RUN unzip opencv_contrib-$OPENCV_VERSION.zip

RUN rm -f opencv-$OPENCV_VERSION.zip
RUN rm -f opencv_contrib-$OPENCV_VERSION.zip

RUN cd opencv-$OPENCV_VERSION && mkdir build && cd build
WORKDIR /tmp/opencv-$OPENCV_VERSION/build

RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=$(python3 -c "import sys; print(sys.prefix)") \
      -D OPENCV_GENERATE_PKGCONFIG=YES \
      -D ENABLE_PRECOMPILED_HEADERS=OFF \
      -D WITH_LIBV4L=ON \
      -D WITH_QT=ON \
      -D WITH_OPENGL=ON \
      -D WITH_JAVA=OFF \
      -D WITH_CUDA=ON \
      -D WITH_CUDNN=ON \
      -D WITH_CUBLAS=1 \
      -D BUILD_opencv_java=OFF \
      -D BUILD_opencv_python=OFF \
      -D BUILD_opencv_python2=OFF \
      -D BUILD_opencv_python3=ON \
      -D PYTHON3_EXECUTABLE=$(which python3) \
      -D PYTHON3_INCLUDE_DIR=$(python3 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") \
      -D PYTHON3_PACKAGES_PATH=$(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") \
      -D INSTALL_PYTHON_EXAMPLES=OFF \
      -D BUILD_NEW_PYTHON_SUPPORT=ON \
      -D ENABLE_CXX11=ON \
      -D WITH_IPP=ON \
      -D WITH_TBB=ON \
      -D ENABLE_FAST_MATH=1 \
      -D CUDA_FAST_MATH=1 \
      -D BUILD_TESTS=OFF \
      -D INSTALL_TESTS=OFF \
      -D BUILD_PERF_TESTS=OFF \
      -D BUILD_EXAMPLES=OFF \
      -D INSTALL_C_EXAMPLES=OFF \
      -D OPENCV_DNN_CUDA=ON \
      -D OPENCV_ENABLE_NONFREE=ON \
      -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-$OPENCV_VERSION/modules \
      ../

RUN make -j $(nproc)
RUN make install

RUN sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
RUN ldconfig
ENV PYTHONPATH=$PYTHONPATH:/usr/lib/python3.8/site-packages/cv2/python-3.8
WORKDIR /opt

RUN apt-get autoclean && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
